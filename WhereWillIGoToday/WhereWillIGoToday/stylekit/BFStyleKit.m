//
//  BFStyleKit.m
//  BF Customized Icons
//
//  Created by Thomas Strau√ü on 14.10.15.
//  Copyright (c) 2015 BeanFactory. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BFStyleKit.h"


@implementation BFStyleKit

#pragma mark Cache

static UIColor* _ausfallBase = nil;
static UIColor* _ausfallFill = nil;
static UIColor* _ausfallRand = nil;
static UIColor* _ausfallText = nil;
static UIColor* _ersatzBase = nil;
static UIColor* _ersatzFill = nil;
static UIColor* _ersatzRand = nil;
static UIColor* _ersatzText = nil;
static UIColor* _mitteilungBase = nil;
static UIColor* _mitteilungFill = nil;
static UIColor* _mitteilungRand = nil;
static UIColor* _mitteilungText = nil;
static UIColor* _offBase = nil;
static UIColor* _offFill = nil;
static UIColor* _offRand = nil;
static UIColor* _offText = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _ausfallBase = [UIColor colorWithRed: 1 green: 0 blue: 0 alpha: 1];
    CGFloat ausfallBaseRGBA[4];
    [_ausfallBase getRed: &ausfallBaseRGBA[0] green: &ausfallBaseRGBA[1] blue: &ausfallBaseRGBA[2] alpha: &ausfallBaseRGBA[3]];

    _ausfallFill = [UIColor colorWithRed: (ausfallBaseRGBA[0] * 0.8) green: (ausfallBaseRGBA[1] * 0.8) blue: (ausfallBaseRGBA[2] * 0.8) alpha: (ausfallBaseRGBA[3] * 0.8 + 0.2)];
    _ausfallRand = [UIColor colorWithRed: (ausfallBaseRGBA[0] * 0.3) green: (ausfallBaseRGBA[1] * 0.3) blue: (ausfallBaseRGBA[2] * 0.3) alpha: (ausfallBaseRGBA[3] * 0.3 + 0.7)];
    _ausfallText = [UIColor colorWithRed: (ausfallBaseRGBA[0] * 0.1 + 0.9) green: (ausfallBaseRGBA[1] * 0.1 + 0.9) blue: (ausfallBaseRGBA[2] * 0.1 + 0.9) alpha: (ausfallBaseRGBA[3] * 0.1 + 0.9)];
    _ersatzBase = [UIColor colorWithRed: 0 green: 0.31 blue: 1 alpha: 1];
    CGFloat ersatzBaseRGBA[4];
    [_ersatzBase getRed: &ersatzBaseRGBA[0] green: &ersatzBaseRGBA[1] blue: &ersatzBaseRGBA[2] alpha: &ersatzBaseRGBA[3]];

    _ersatzFill = [UIColor colorWithRed: (ersatzBaseRGBA[0] * 0.8) green: (ersatzBaseRGBA[1] * 0.8) blue: (ersatzBaseRGBA[2] * 0.8) alpha: (ersatzBaseRGBA[3] * 0.8 + 0.2)];
    _ersatzRand = [UIColor colorWithRed: (ersatzBaseRGBA[0] * 0.3) green: (ersatzBaseRGBA[1] * 0.3) blue: (ersatzBaseRGBA[2] * 0.3) alpha: (ersatzBaseRGBA[3] * 0.3 + 0.7)];
    _ersatzText = [UIColor colorWithRed: (ersatzBaseRGBA[0] * 0.1 + 0.9) green: (ersatzBaseRGBA[1] * 0.1 + 0.9) blue: (ersatzBaseRGBA[2] * 0.1 + 0.9) alpha: (ersatzBaseRGBA[3] * 0.1 + 0.9)];
    _mitteilungBase = [UIColor colorWithRed: 0.112 green: 1 blue: 0 alpha: 1];
    CGFloat mitteilungBaseRGBA[4];
    [_mitteilungBase getRed: &mitteilungBaseRGBA[0] green: &mitteilungBaseRGBA[1] blue: &mitteilungBaseRGBA[2] alpha: &mitteilungBaseRGBA[3]];

    _mitteilungFill = [UIColor colorWithRed: (mitteilungBaseRGBA[0] * 0.8) green: (mitteilungBaseRGBA[1] * 0.8) blue: (mitteilungBaseRGBA[2] * 0.8) alpha: (mitteilungBaseRGBA[3] * 0.8 + 0.2)];
    _mitteilungRand = [UIColor colorWithRed: (mitteilungBaseRGBA[0] * 0.3) green: (mitteilungBaseRGBA[1] * 0.3) blue: (mitteilungBaseRGBA[2] * 0.3) alpha: (mitteilungBaseRGBA[3] * 0.3 + 0.7)];
    _mitteilungText = [UIColor colorWithRed: (mitteilungBaseRGBA[0] * 0.1 + 0.9) green: (mitteilungBaseRGBA[1] * 0.1 + 0.9) blue: (mitteilungBaseRGBA[2] * 0.1 + 0.9) alpha: (mitteilungBaseRGBA[3] * 0.1 + 0.9)];
    _offBase = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    CGFloat offBaseRGBA[4];
    [_offBase getRed: &offBaseRGBA[0] green: &offBaseRGBA[1] blue: &offBaseRGBA[2] alpha: &offBaseRGBA[3]];

    _offFill = [UIColor colorWithRed: (offBaseRGBA[0] * 0.8) green: (offBaseRGBA[1] * 0.8) blue: (offBaseRGBA[2] * 0.8) alpha: (offBaseRGBA[3] * 0.8 + 0.2)];
    _offRand = [UIColor colorWithRed: (offBaseRGBA[0] * 0.7) green: (offBaseRGBA[1] * 0.7) blue: (offBaseRGBA[2] * 0.7) alpha: (offBaseRGBA[3] * 0.7 + 0.3)];
    _offText = [UIColor colorWithRed: (offBaseRGBA[0] * 0.8) green: (offBaseRGBA[1] * 0.8) blue: (offBaseRGBA[2] * 0.8) alpha: (offBaseRGBA[3] * 0.8 + 0.2)];

}

#pragma mark Colors

+ (UIColor*)ausfallBase { return _ausfallBase; }
+ (UIColor*)ausfallFill { return _ausfallFill; }
+ (UIColor*)ausfallRand { return _ausfallRand; }
+ (UIColor*)ausfallText { return _ausfallText; }
+ (UIColor*)ersatzBase { return _ersatzBase; }
+ (UIColor*)ersatzFill { return _ersatzFill; }
+ (UIColor*)ersatzRand { return _ersatzRand; }
+ (UIColor*)ersatzText { return _ersatzText; }
+ (UIColor*)mitteilungBase { return _mitteilungBase; }
+ (UIColor*)mitteilungFill { return _mitteilungFill; }
+ (UIColor*)mitteilungRand { return _mitteilungRand; }
+ (UIColor*)mitteilungText { return _mitteilungText; }
+ (UIColor*)offBase { return _offBase; }
+ (UIColor*)offFill { return _offFill; }
+ (UIColor*)offRand { return _offRand; }
+ (UIColor*)offText { return _offText; }

#pragma mark Drawing Methods

+ (void)drawBFSignalDotWithBulletFrame: (CGRect)bulletFrame title: (NSString*)title mode: (CGFloat)mode fontSize: (CGFloat)fontSize
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* fillColor = mode == 0 ? BFStyleKit.mitteilungFill : (mode == 1 ? BFStyleKit.ersatzFill : (mode == 2 ? BFStyleKit.ausfallFill : BFStyleKit.offFill));
    UIColor* textColor = mode == 0 ? BFStyleKit.mitteilungText : (mode == 1 ? BFStyleKit.ersatzText : (mode == 2 ? BFStyleKit.ausfallText : BFStyleKit.offText));
    UIColor* strokeColor = mode == 0 ? BFStyleKit.mitteilungRand : (mode == 1 ? BFStyleKit.ersatzRand : (mode == 2 ? BFStyleKit.ausfallRand : BFStyleKit.offRand));

    //// BulletShape Drawing
    CGRect bulletShapeRect = CGRectMake(CGRectGetMinX(bulletFrame) + 1, CGRectGetMinY(bulletFrame) + 1, CGRectGetWidth(bulletFrame) - 2, CGRectGetHeight(bulletFrame) - 2);
    UIBezierPath* bulletShapePath = [UIBezierPath bezierPathWithOvalInRect: bulletShapeRect];
    [fillColor setFill];
    [bulletShapePath fill];
    [strokeColor setStroke];
    bulletShapePath.lineWidth = 1;
    [bulletShapePath stroke];
    NSMutableParagraphStyle* bulletShapeStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    bulletShapeStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* bulletShapeFontAttributes = @{NSFontAttributeName: [UIFont boldSystemFontOfSize: fontSize], NSForegroundColorAttributeName: textColor, NSParagraphStyleAttributeName: bulletShapeStyle};

    CGFloat bulletShapeTextHeight = [title boundingRectWithSize: CGSizeMake(bulletShapeRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: bulletShapeFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, bulletShapeRect);
    [title drawInRect: CGRectMake(CGRectGetMinX(bulletShapeRect), CGRectGetMinY(bulletShapeRect) + (CGRectGetHeight(bulletShapeRect) - bulletShapeTextHeight) / 2, CGRectGetWidth(bulletShapeRect), bulletShapeTextHeight) withAttributes: bulletShapeFontAttributes];
    CGContextRestoreGState(context);
}

@end
