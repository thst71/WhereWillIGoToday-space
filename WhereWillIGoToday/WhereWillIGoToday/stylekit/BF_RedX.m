//
//  BF_RedX.m
//  X-On-Button
//
//  Created by Thomas Strau√ü on 08.09.16.
//  Copyright (c) 2016 BeanFactory. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BF_RedX.h"


@implementation BF_RedX

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawRedxWithFrame: (CGRect)frame
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 0.316];

    //// Variable Declarations
    CGPoint ltor_curve = CGPointMake(25, 25);
    CGPoint rtol_curve = CGPointMake(25, 25);

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: frame];
    [color setFill];
    [ovalPath fill];


    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, ltor_curve.x, ltor_curve.y);

    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(0, 0)];
    [bezierPath addLineToPoint: CGPointMake(50.5, 50.5)];
    bezierPath.lineCapStyle = kCGLineCapRound;

    [UIColor.grayColor setFill];
    [bezierPath fill];
    [UIColor.redColor setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];

    CGContextRestoreGState(context);


    //// Bezier 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, rtol_curve.x, rtol_curve.y);

    UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
    [bezier2Path moveToPoint: CGPointMake(0, 50.5)];
    [bezier2Path addLineToPoint: CGPointMake(50.5, 0)];
    bezier2Path.lineCapStyle = kCGLineCapRound;

    [UIColor.grayColor setFill];
    [bezier2Path fill];
    [UIColor.redColor setStroke];
    bezier2Path.lineWidth = 3;
    [bezier2Path stroke];

    CGContextRestoreGState(context);
}

@end
